{"version":3,"file":"adobe-ims-servicetoken.esm.min.js","sources":["../src/ims.js"],"sourcesContent":["import {FormData as FormDataImport} from \"form-data\";\r\nimport {fetch as fetchImport} from \"node-fetch\";\r\nimport murmurHash3 from \"murmurhash3js\";\r\n\r\nconst FormDataFacade = typeof FormData === \"undefined\" ? FormDataImport : FormData;\r\nconst fetchFacade = typeof fetch === \"undefined\" ? fetchImport : fetch;\r\n\r\nconst hash128 = murmurHash3.x64.hash128,\r\n\ttokens = new Map(),\r\n\tclone = typeof structuredClone === \"function\" ? structuredClone : arg => JSON.parse(JSON.stringify(arg));\r\n\r\nasync function token ({\r\n\turl = \"https://ims-na1.adobelogin.com/ims/token\",\r\n\tgrant_type = \"authorization_code\",\r\n\tclient_id = \"\",\r\n\tclient_secret = \"\",\r\n\tcode = \"\",\r\n\tjwt_token = \"\"\r\n} = {}) {\r\n\tconst key = hash128(`${url}|${client_id}|${grant_type}`);\r\n\tlet result;\r\n\r\n\tif (tokens.has(key) === false) {\r\n\t\tconst form = new FormDataFacade();\r\n\t\tlet res;\r\n\r\n\t\tif (grant_type.length > 0) {\r\n\t\t\tform.append(\"grant_type\", grant_type);\r\n\t\t}\r\n\r\n\t\tform.append(\"client_id\", client_id);\r\n\t\tform.append(\"client_secret\", client_secret);\r\n\r\n\t\tif (code.length > 0) {\r\n\t\t\tform.append(\"code\", code);\r\n\t\t}\r\n\r\n\t\tif (jwt_token.length > 0) {\r\n\t\t\tform.append(\"jwt_token\", jwt_token);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tres = await fetchFacade(url, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: form.getHeaders(),\r\n\t\t\t\tbody: form\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tres = {\r\n\t\t\t\tok: false,\r\n\t\t\t\tstatusText: err.message || err,\r\n\t\t\t\tjson: async () => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\terror: res.statusText,\r\n\t\t\t\t\t\terror_description: err.message\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\ttext: async () => err.message || err\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst data = await res.json();\r\n\r\n\t\tif (res.ok) {\r\n\t\t\ttokens.set(key, data.access_token);\r\n\t\t\tresult = clone(data.access_token);\r\n\r\n\t\t\tif (data.expires_in !== void 0) {\r\n\t\t\t\tsetTimeout(() => tokens.delete(key), data.expires_in); // 24hr validity at time of dev\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(`[${res.status}] ${data.error}: ${data.error_description}`);\r\n\t\t}\r\n\t} else {\r\n\t\tresult = clone(tokens.get(key));\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nmodule.exports = token;\r\n"],"names":["FormDataFacade","FormData","FormDataImport","fetchFacade","fetch","fetchImport","hash128","murmurHash3","x64","tokens","Map","clone","structuredClone","arg","JSON","parse","stringify","module","exports","async","url","grant_type","client_id","client_secret","code","jwt_token","key","result","has","form","res","length","append","method","headers","getHeaders","body","err","ok","statusText","message","json","error","error_description","text","data","Error","status","set","access_token","expires_in","setTimeout","delete","get"],"mappings":";;;;qGAIA,MAAMA,EAAqC,oBAAbC,SAA2BC,EAAiBD,SACpEE,EAA+B,oBAAVC,MAAwBC,EAAcD,MAE3DE,EAAUC,EAAYC,IAAIF,QAC/BG,EAAS,IAAIC,IACbC,EAAmC,mBAApBC,gBAAiCA,gBAAkBC,GAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAuEpGI,OAAOC,QArEPC,gBAAsBC,IACrBA,EAAM,2CAA0CC,WAChDA,EAAa,qBAAoBC,UACjCA,EAAY,GAAEC,cACdA,EAAgB,GAAEC,KAClBA,EAAO,GAAEC,UACTA,EAAY,IACT,IACH,MAAMC,EAAMpB,EAAQ,GAAGc,KAAOE,KAAaD,KAC3C,IAAIM,EAEJ,IAAwB,IAApBlB,EAAOmB,IAAIF,GAAgB,CAC9B,MAAMG,EAAO,IAAI7B,EACjB,IAAI8B,EAEAT,EAAWU,OAAS,GACvBF,EAAKG,OAAO,aAAcX,GAG3BQ,EAAKG,OAAO,YAAaV,GACzBO,EAAKG,OAAO,gBAAiBT,GAEzBC,EAAKO,OAAS,GACjBF,EAAKG,OAAO,OAAQR,GAGjBC,EAAUM,OAAS,GACtBF,EAAKG,OAAO,YAAaP,GAG1B,IACCK,QAAY3B,EAAYiB,EAAK,CAC5Ba,OAAQ,OACRC,QAASL,EAAKM,aACdC,KAAMP,GAEP,CAAC,MAAOQ,GACRP,EAAM,CACLQ,IAAI,EACJC,WAAYF,EAAIG,SAAWH,EAC3BI,KAAMtB,UACE,CACNuB,MAAOZ,EAAIS,WACXI,kBAAmBN,EAAIG,UAGzBI,KAAMzB,SAAYkB,EAAIG,SAAWH,EAElC,CAED,MAAMQ,QAAaf,EAAIW,OAEvB,IAAIX,EAAIQ,GAQP,MAAM,IAAIQ,MAAM,IAAIhB,EAAIiB,WAAWF,EAAKH,UAAUG,EAAKF,qBAPvDlC,EAAOuC,IAAItB,EAAKmB,EAAKI,cACrBtB,EAAShB,EAAMkC,EAAKI,mBAEI,IAApBJ,EAAKK,YACRC,YAAW,IAAM1C,EAAO2C,OAAO1B,IAAMmB,EAAKK,WAK9C,MACEvB,EAAShB,EAAMF,EAAO4C,IAAI3B,IAG3B,OAAOC,CACR"}