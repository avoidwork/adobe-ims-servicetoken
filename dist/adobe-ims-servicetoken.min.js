/*!
 2023 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 3.0.0
*/
import e from"murmurhash3js";const t=e.x64.hash128,s=new Map;async function n({url:e="https://ims-na1.adobelogin.com/ims/token",grant_type:n="authorization_code",client_id:r="",client_secret:o="",code:a="",jwt_token:c=""}={}){const i=t(`${e}|${r}|${n}`);let d;if(!1===s.has(i)){const t=new FormData;let p;n.length>0&&t.append("grant_type",n),t.append("client_id",r),t.append("client_secret",o),a.length>0&&t.append("code",a),c.length>0&&t.append("jwt_token",c);try{p=await fetch(e,{method:"POST",headers:t.getHeaders(),body:t})}catch(e){p={ok:!1,statusText:e.message||e,json:async()=>({error:p.statusText,error_description:e.message}),text:async()=>e.message||e}}const h=await p.json();if(!p.ok)throw new Error(`[${p.status}] ${h.error}: ${h.error_description}`);s.set(i,h.access_token),d=structuredClone(h.access_token),void 0!==h.expires_in&&setTimeout((()=>s.delete(i)),h.expires_in)}else d=structuredClone(s.get(i));return d}export{n as token};//# sourceMappingURL=adobe-ims-servicetoken.min.js.map
